{
  "$id": "https://github.com/mbta/schemas/blob/main/schemas/cloudevents.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$comment": "Modified from https://github.com/cloudevents/spec/blob/b43a64bf4fa92baee02dad512f23ea5cb77a321c/cloudevents/formats/cloudevents.json",
  "description": "CloudEvents Specification JSON Schema",
  "type": "object",
  "properties": {
    "id": {
      "description": "Identifies the event.",
      "type": "string",
      "minLength": 1,
      "examples": ["A234-1234-1234"]
    },
    "source": {
      "description": "Identifies the context in which an event happened.",
      "type": "string",
      "format": "uri-reference",
      "minLength": 1,
      "examples": [
        "https://github.com/cloudevents",
        "mailto:cncf-wg-serverless@lists.cncf.io",
        "urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66",
        "cloudevents/spec/pull/123",
        "/sensors/tn-1234567/alerts",
        "1-555-123-4567"
      ]
    },
    "specversion": {
      "description": "The version of the CloudEvents specification which the event uses.",
      "type": "string",
      "minLength": 1,
      "examples": ["1.0"]
    },
    "type": {
      "description": "Describes the type of event related to the originating occurrence.",
      "type": "string",
      "minLength": 1,
      "examples": [
        "com.github.pull_request.opened",
        "com.example.object.deleted.v2"
      ]
    },
    "datacontenttype": {
      "description": "Content type of the data value. Must adhere to RFC 2046 format.",
      "type": ["string", "null"],
      "minLength": 1,
      "examples": [
        "text/xml",
        "application/json",
        "image/png",
        "multipart/form-data"
      ]
    },
    "dataschema": {
      "description": "Identifies the schema that data adheres to.",
      "type": ["string", "null"],
      "format": "uri",
      "minLength": 1
    },
    "subject": {
      "description": "Describes the subject of the event in the context of the event producer (identified by source).",
      "type": ["string", "null"],
      "minLength": 1,
      "examples": ["mynewfile.jpg"]
    },
    "time": {
      "description": "Timestamp of when the occurrence happened. Must adhere to RFC 3339.",
      "type": ["string", "null"],
      "format": "date-time",
      "minLength": 1,
      "examples": ["2018-04-05T17:31:00Z"]
    },
    "data": {
      "description": "The event payload.",
      "anyOf": [
        { "type": "object" },
        { "type": "string" },
        { "type": "number" },
        { "type": "array" },
        { "type": "boolean" },
        { "type": "null" }
      ],
      "examples": ["<much wow=\"xml\"/>"]
    },
    "data_base64": {
      "description": "Base64 encoded event payload. Must adhere to RFC4648.",
      "type": ["string", "null"],
      "contentEncoding": "base64",
      "examples": ["Zm9vYg=="]
    }
  },
  "required": ["id", "source", "specversion", "type"]
}
